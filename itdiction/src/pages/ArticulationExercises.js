import React, { useState, useEffect } from 'react';
import { Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';
import Timer from '../components/Timer';
import Footer from '../components/Footer';

const ArticulationExercises = () => {
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [modalContent, setModalContent] = useState({});
    const [serverExercises, setServerExercises] = useState([]); // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞
    const [loading, setLoading] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    const [error, setError] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏

    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    const exercises = [
        { id: 1, title: "üü° –ñ—ã–ª–∞–Ω –∂–∞—Ç—Ç—ã“ì—É—ã", text: "–¢—ñ–ª–¥—ñ –æ“£“ì–∞ –∂”ô–Ω–µ —Å–æ–ª“ì–∞ –±–∞—è—É “õ–æ–∑“ì–∞–ª—Ç—ã“£—ã–∑. 5 —Ä–µ—Ç “õ–∞–∏ÃÜ—Ç–∞–ª–∞“£—ã–∑." },
        { id: 2, title: "üîµ –°–∞“ì–∞—Ç —Ç—ñ–ª—ñ –∂–∞—Ç—Ç—ã“ì—É—ã", text: "–¢—ñ–ª–¥—ñ —Å–∞“ì–∞—Ç —Ç—ñ–ª—ñ –±–æ–∏ÃÜ—ã–Ω—à–∞ –∞–∏ÃÜ–Ω–∞–ª–¥—ã—Ä—ã“£—ã–∑. 10 —Ä–µ—Ç “õ–∞–∏ÃÜ—Ç–∞–ª–∞“£—ã–∑." },
        { id: 3, title: "üü¢ –ë–∞“õ–∞ –∂–∞—Ç—Ç—ã“ì—É—ã", text: "–ê—É–∑—ã“£—ã–∑–¥—ã –∫–µ“£ –∞—à—ã–ø, —Ç—ñ–ª–¥—ñ —Ç”©–º–µ–Ω —Ç“Ø—Å—ñ—Ä—ñ“£—ñ–∑. 7 —Ä–µ—Ç “õ–∞–∏ÃÜ—Ç–∞–ª–∞“£—ã–∑." },
        { id: 4, title: "üü† “ö–∞—Ä–ª—ã“ì–∞—à –∂–∞—Ç—Ç—ã“ì—É—ã", text: "–¢—ñ–ª–¥—ñ –∂–æ“ì–∞—Ä—ã –∫”©—Ç–µ—Ä—ñ–ø, —Ç–∞“£–¥–∞–∏ÃÜ“ì–∞ —Ç–∏–≥—ñ–∑—ñ“£—ñ–∑. 6 —Ä–µ—Ç “õ–∞–∏ÃÜ—Ç–∞–ª–∞“£—ã–∑." },
        { id: 5, title: "üî¥ –¢”ô—Ç—Ç—ñ –±–∞–ª–º“±–∑–¥–∞“õ", text: "–¢—ñ–ª–¥—ñ –µ—Ä—ñ–Ω–≥–µ —Ç–∏–≥—ñ–∑—ñ–ø, –±–∞—è—É –∞–∏ÃÜ–Ω–∞–ª–¥—ã—Ä—ã“£—ã–∑. 8 —Ä–µ—Ç “õ–∞–∏ÃÜ—Ç–∞–ª–∞“£—ã–∑." },
        { id: 6, title: "üü£ –ú—ã—Å—ã“õ—Ç—ã“£ —Ç—ñ–ª—ñ", text: "–¢—ñ–ª–¥—ñ –∞–ª“ì–∞ —Å–æ–∑—ã–ø, –±–∞—è—É –∫–µ—Ä—ñ —Ç–∞—Ä—Ç—ã“£—ã–∑. 5 —Ä–µ—Ç “õ–∞–∏ÃÜ—Ç–∞–ª–∞“£—ã–∑." },
    ];

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
    const fetchServerExercises = async () => {
        setLoading(true);
        try {
            const response = await fetch('http://localhost:8000/api/exercises/', {
                headers: {
                    Authorization: `Bearer ${localStorage.getItem('accessToken')}`, // –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                },
            });

            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π');
            }

            const data = await response.json();
            setServerExercises(data); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞
        } catch (err) {
            setError(err.message);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchServerExercises(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    }, []);

    const openModal = (exercise) => {
        setModalContent(exercise);
        setIsModalOpen(true);
    };

    const closeModal = () => setIsModalOpen(false);

    const handleTimerComplete = () => {
        alert("–£–∞“õ—ã—Ç –∞—è“õ—Ç–∞–ª–¥—ã! –ö–µ–ª–µ—Å—ñ –∂–∞—Ç—Ç—ã“ì—É“ì–∞ –∫”©—à—É–≥–µ –±–æ–ª–∞–¥—ã.");
        closeModal();
    };

    return (
        <div className="container mt-4">
            <Typography variant="h4" align="center" gutterBottom>
                –ê–∏ÃÜ“õ—ã–Ω ”ô—Ä—ñ —Ç–∞–∑–∞ —Å”©–∏ÃÜ–ª–µ—É–¥—ñ –¥–∞–º—ã—Ç—É“ì–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω –∂–∞—Ç—Ç—ã“ì—É–ª–∞—Ä
            </Typography>

            {loading && <Typography align="center">–ó–∞–≥—Ä—É–∑–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π...</Typography>}
            {error && <Typography align="center" color="error">{error}</Typography>}

            <Grid container spacing={3}>
                {/* –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è */}
                {exercises.map((exercise) => (
                    <Grid item xs={12} sm={6} md={4} key={exercise.id}>
                        <Card variant="outlined">
                            <CardContent>
                                <Typography variant="h5" component="div" gutterBottom>
                                    {exercise.title}
                                </Typography>
                                <Typography variant="body2" color="text.secondary">
                                    {exercise.text}
                                </Typography>
                                <Button
                                    variant="contained"
                                    color="primary"
                                    onClick={() => openModal(exercise)}
                                    sx={{ marginTop: 2 }}
                                >
                                    –¢–æ–ª—ã“ì—ã—Ä–∞“õ
                                </Button>
                            </CardContent>
                        </Card>
                    </Grid>
                ))}

                {/* –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞ */}
                {serverExercises.map((exercise) => (
                    <Grid item xs={12} sm={6} md={4} key={exercise.id}>
                        <Card variant="outlined">
                            <CardContent>
                                <Typography variant="h5" component="div" gutterBottom>
                                    {exercise.title}
                                </Typography>
                                <Typography variant="body2" color="text.secondary">
                                    {exercise.content}
                                </Typography>
                                <Button
                                    variant="contained"
                                    color="primary"
                                    onClick={() => openModal(exercise)}
                                    sx={{ marginTop: 2 }}
                                >
                                    –¢–æ–ª—ã“ì—ã—Ä–∞“õ
                                </Button>
                            </CardContent>
                        </Card>
                    </Grid>
                ))}
            </Grid>

            <Dialog open={isModalOpen} onClose={closeModal}>
                <DialogTitle>{modalContent.title}</DialogTitle>
                <DialogContent>
                    <Typography>{modalContent.text || modalContent.content}</Typography>
                    <Timer initialTime={30} onComplete={handleTimerComplete} />
                </DialogContent>
                <DialogActions>
                    <Button onClick={closeModal} color="primary">
                        –ñ–∞–±—É
                    </Button>
                </DialogActions>
            </Dialog>

            <Footer />
        </div>
    );
};

export default ArticulationExercises;